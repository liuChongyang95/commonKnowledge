权限修饰符
-----
java子类重写继承的方法时，不可以降低方法的访问权限；
子类继承父类的访问修饰符要比父类大；
继承当中子类抛出的异常必须是父类抛出的异常的自异常，或者子类抛出的异常比父类更少。

1.用于控制被修饰变量，方法，类的可见范围。
从高到低的访问级别是 
                     public protected default private
         同一个类      T       T        T       T 
         同一个包      T       T        T       F
         子父类        T       T        F       F
         不同包        T       F        F       F

存在继承关系的时候，父类不能使private，因为子类无法继承
顶层类不能被protected和private修饰
局部变量不能被访问控制符修饰
不同包下，只有public和protected修饰的对象可以访问。protected需要有继承关系。

2.abstract修饰符

抽象类不能被实例化。
抽象类可以不包含抽象方法，包含抽象方法的类一定是抽象类。
如果子类没有实现父类所有的抽象方法，那么子类也是抽象类。
抽象类不能被定义为private final static类型
没有抽象的构造方法
抽象方法没有方法体；如果一个方法没有方法体，则必须为抽象方法
非抽象类继承抽象类的时候必须要把所有抽象方法实现。

抽象类中不能有静态static抽象abstract方法
抽象类不能实例化，不能被分配内存，而static修饰的方法在类实例化之前就分配了内存，有矛盾
定义抽象方法是为了重写此方法，如果定义成静态方法，不能重写

3.final修饰符

final变量必须被显式初始化，并且只能被赋值一次值
final修饰基本类型变量的时候，该变量不能重新赋值 int 
final修饰引用类型变量的时候，该变量不能重新指向其他对象 string
final修饰的方法为最终的方法，该方法不能被重写
private类型的方法都默认是final方法，也不能被子类重写
final修饰的类为最终类，不能被继承

4.static修饰符

java静态变量 可用于内部类，方法，变量；
被所在类的所有实例公用，在类装载时初始化、被分派相应的内存空间，该空间在整个程序过程都被该变量所有、

static方法内部不能有非static变量

static方法不能被子类重写为非static方法

父类的非static不能重写为子类的static

static{}代码块先于static方法和其他方法执行。

变量标记为static说明他在内存中有不变的位置，相当于全局变量，所有类的实例都访问同一个
修改它，对所有类的实例都是可见的。再次调用时，它会保留前次被调用留下的值。

静态变量不属于某个实例对象，属于某各类，也成为类变量。不用创建实例对象。

静态存储方式
动态存储方式（函数调用时，给需要用到的参数分配内存，用完释放）

-------------------
如果声明了静态方法或变量值放在方法区，方法区是一个数据共享区，所以不管什么变量访问他，都是同一份。
静态方法不能访问实例变量，实例方法，不能使用this，super。因为他是先初始化的，会报错。
静态方法不能用abstract修饰。
